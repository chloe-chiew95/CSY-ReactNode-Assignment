{"version":3,"sources":["Views/DateTime.js","Views/Restaurant.js","Views/MenuItem.js","Views/Checkout.js","Home.js","OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["DateTimeView","props","dateCallback","childData","timeCallback","parentCallback","this","date","minDate","defDate","defTime","time","Component","SelectDate","OnChangeListener","e","target","value","bind","for","name","type","min","defaultValue","onChange","SelectTime","RestaurantView","restCallback","state","restArr","FilterRestaurant","dayOfDate","Date","getDay","selectedTime","split","arr","forEach","item","index","operationTimeRange","includes","parseInt","replace","indexOf","push","setState","SelectRestaurant","onClickListener","className","length","map","MenuItemView","menuCallback","menuArr","FilterMenu","PATTERN","numInText","x","foodItem","match","menuItem","total","SelectMenuItem","onChangeListener","removeElement","newItem","id","checked","newTotal","array","elem","splice","CheckoutView","order","DisplayCheckout","i","ConvertTo12HourFormat","timeData","timeArr","GetCurrentDateTime","NOW","CURRENT_DATE","getFullYear","getMonth","toString","padStart","getDate","CURRENT_HOUR","getHours","CURRENT_MIN","getMinutes","Home","handleSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","restaurantCallback","apiResponse","viewId","NavButtonClick","then","res","json","callAPI","alert","DateTime","Restaurant","MenuItem","totalCallback","Checkout","onClick","OrderHistory","console","log","App","orderCallback","data","orderList","href","exact","path","to","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eb624da0.chunk.js","sourcesContent":["/** Name: DateTime.js\r\n *  Purpose: User selects the time and date for the delivery.\r\n*/\r\n\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass DateTimeView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  dateCallback = (childData) => {\r\n    this.props.dateCallback(childData);\r\n  };\r\n\r\n  timeCallback = (childData) => {\r\n    this.props.timeCallback(childData);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Delivery Date/Time</h2>\r\n        <SelectDate\r\n          parentCallback={this.dateCallback}\r\n          date={this.props.minDate}\r\n          defDate={this.props.date}\r\n        />\r\n        <SelectTime\r\n          parentCallback={this.timeCallback}\r\n          defTime={this.props.time}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SelectDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.OnChangeListener = this.OnChangeListener.bind(this);\r\n  }\r\n\r\n  OnChangeListener = (e) => {\r\n    this.props.parentCallback(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label for=\"dateSel\">\r\n          <h3>Select date: </h3>\r\n        </label>\r\n        <input\r\n          name=\"inputDate\"\r\n          type=\"date\"\r\n          min={this.props.date}\r\n          defaultValue={this.props.defDate}\r\n          onChange={this.OnChangeListener}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SelectTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  OnChangeListener = (e) => {\r\n    this.props.parentCallback(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label for=\"timeSel\">\r\n          <h3>Select time: </h3>\r\n        </label>\r\n        <input\r\n          type=\"time\"\r\n          onChange={this.OnChangeListener}\r\n          defaultValue={this.props.defTime}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateTimeView;\r\n","/** Name: Restaurant.js\r\n *  Purpose: User gets to choose one of the listed restaurant(s)\r\n *           that are available according to the selected time and date.cd        \r\n *           \r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass RestaurantView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      restArr: [],\r\n    };\r\n\r\n    this.FilterRestaurant = this.FilterRestaurant.bind(this);\r\n  }\r\n\r\n  FilterRestaurant(time, date, restArr) {\r\n    var days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n    var d = new Date(date);\r\n    var dayOfDate = days[d.getDay()];\r\n    var selectedTime = time.split(\":\");\r\n    var arr = [];\r\n\r\n    restArr.forEach(function (item, index) {\r\n      var operationTimeRange = item[\"operationHours\"].split(\" - \");\r\n      operationTimeRange.forEach(function (item, index) {\r\n        item.includes(\"am\")\r\n          ? (operationTimeRange[index] = parseInt(item.replace(\"am\", \"\")))\r\n          : (operationTimeRange[index] = parseInt(item.replace(\"pm\", \"\")) + 12);\r\n      });\r\n\r\n      if (\r\n        !item[\"offDays\"].includes(dayOfDate) &&\r\n        operationTimeRange[0] <= selectedTime[0] &&\r\n        operationTimeRange[1] >= selectedTime[0]\r\n      ) {\r\n        if (arr.indexOf(item[\"name\"]) == -1) {\r\n          arr.push(item[\"name\"]);\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      restArr: arr,\r\n    });\r\n  }\r\n\r\n  restCallback = (childData) => {\r\n    this.props.restCallback(childData);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ restArr: [] });\r\n    this.FilterRestaurant(this.props.time, this.props.date, this.props.restArr);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Select Restaurant</h2>\r\n        <SelectRestaurant\r\n          restCallback={this.restCallback}\r\n          restArr={this.state.restArr}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SelectRestaurant extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onClickListener = this.onClickListener.bind(this);\r\n  }\r\n\r\n  onClickListener(e) {\r\n    this.props.restCallback(e.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Restaurant-Tb\">\r\n        <table>\r\n          {this.props.restArr.length == 0 ? (\r\n            <p className=\"alert-msg\">\r\n              No restaurants are unavailable at this time!\r\n            </p>\r\n          ) : (\r\n            this.props.restArr.map((item) => (\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    name=\"restaurantName\"\r\n                    type=\"radio\"\r\n                    onChange={this.onClickListener}\r\n                    value={item}\r\n                  />\r\n                  {item}\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantView;\r\n","/** Name: MenuItem.js\r\n *  Purpose: User gets to choose whichever menu item to add\r\n *           into the cart.\r\n *           \r\n*/\r\n\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass MenuItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuArr: [],\r\n    };\r\n\r\n    this.FilterMenu = this.FilterMenu.bind(this);\r\n  }\r\n\r\n  FilterMenu(time, date, menuArr, name) {\r\n    const PATTERN = /(MYR)\\w+/g;\r\n    var days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n    var numInText = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"];\r\n    var d = new Date(date);\r\n    var dayOfDate = days[d.getDay()];\r\n    var selectedTime = time.split(\":\");\r\n    var arr = [];\r\n\r\n    menuArr.forEach(function (item, index) {\r\n      var operationTimeRange = item[\"operationHours\"].split(\" - \");\r\n      operationTimeRange.forEach(function (item, index) {\r\n        item.includes(\"am\")\r\n          ? (operationTimeRange[index] = parseInt(item.replace(\"am\", \"\")))\r\n          : (operationTimeRange[index] = parseInt(item.replace(\"pm\", \"\")) + 12);\r\n      });\r\n\r\n      if (\r\n        !item[\"offDays\"].includes(dayOfDate) &&\r\n        operationTimeRange[0] <= selectedTime[0] &&\r\n        operationTimeRange[1] >= selectedTime[0] &&\r\n        item[\"name\"] == name\r\n      ) {\r\n        for (var x = 0; x < 5; x++) {\r\n          var foodItem = [\r\n            item[\"set\" + numInText[x]].replace(/( - MYR)\\w+/g, \"\"),\r\n            item[\"set\" + numInText[x]].match(PATTERN),\r\n          ];\r\n          foodItem[1] = (foodItem[1] + \"\").replace(\"MYR\", \"\");\r\n\r\n          arr.push([foodItem[0], foodItem[1]]);\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      menuArr: arr,\r\n    });\r\n  }\r\n\r\n  menuCallback = (childData) => {\r\n    this.props.menuCallback(childData);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.menuCallback([[], 0]);\r\n    this.setState({ menuArr: [] });\r\n    this.FilterMenu(\r\n      this.props.time,\r\n      this.props.date,\r\n      this.props.restArr,\r\n      this.props.name\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Select Menu Item</h2>\r\n        <SelectMenuItem\r\n          menuArr={this.state.menuArr}\r\n          menuItem={this.props.menuItem}\r\n          total={this.props.total}\r\n          menuCallback={this.menuCallback}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SelectMenuItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeListener = this.onChangeListener.bind(this);\r\n    this.removeElement = this.removeElement.bind(this);\r\n  }\r\n\r\n  onChangeListener(e) {\r\n    var newItem = e.target.id + \" - MYR\" + e.target.value;\r\n\r\n    if (e.target.checked != true) {\r\n      var newTotal = parseInt(this.props.total) - parseInt(e.target.value);\r\n      this.props.menuCallback([\r\n        this.removeElement([...this.props.menuItem], newItem),\r\n        newTotal,\r\n      ]);\r\n    } else {\r\n      var newTotal = parseInt(this.props.total) + parseInt(e.target.value);\r\n      this.props.menuCallback([[...this.props.menuItem, newItem], newTotal]);\r\n    }\r\n  }\r\n\r\n  removeElement(array, elem) {\r\n    var index = array.indexOf(elem);\r\n    if (index > -1) {\r\n      array.splice(index, 1);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Restaurant-Tb\">\r\n        {\r\n          <table>\r\n            <th>Set</th>\r\n            <th>Price</th>\r\n            {this.props.menuArr.map((item) => (\r\n              <tr>\r\n                <td>{item[0]}</td>\r\n                <td>MYR{item[1]}</td>\r\n                <td>\r\n                  {this.props.menuItem.indexOf(item[0] + \" - MYR\" + item[1]) ==\r\n                  -1 ? (\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={this.onChangeListener}\r\n                      value={item[1]}\r\n                      id={item[0]}\r\n                    />\r\n                  ) : (\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={true}\r\n                      onChange={this.onChangeListener}\r\n                      value={item[1]}\r\n                      id={item[0]}\r\n                    />\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        }{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuItemView;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass CheckoutView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DisplayCheckout order={this.props.order} time={this.props.time} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst DisplayCheckout = (props) => {\r\n  return (\r\n    <div className=\"Display-Checkout\">\r\n      <h1>Checkout</h1>\r\n      <h3>Time: {props.time}</h3>\r\n      <h3>Date: {props.order[\"date\"]}</h3>\r\n      <h3>Restaurant name: {props.order[\"name\"]}</h3>\r\n      <h4>Order list:</h4>\r\n      {props.order[\"menuItem\"].map((i) => (\r\n        <li>{i}</li>\r\n      ))}\r\n      <h2 className=\"totalCheckout\">Total: MYR{props.order[\"total\"]}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutView;\r\n","/** Name: Home.js\r\n *  Purpose: The main page where users can order food from.\r\n *           Different views get swapped in and out here as user\r\n *           progresses by clicking on the navigation buttons.\r\n*/\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport DateTimeView from \"./Views/DateTime\";\r\nimport RestaurantView from \"./Views/Restaurant\";\r\nimport MenuItemView from \"./Views/MenuItem\";\r\nimport CheckoutView from \"./Views/Checkout\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiResponse: [],\r\n      viewId: 1,\r\n      order: {\r\n        time: GetCurrentDateTime(\"hour\") + \":\" + GetCurrentDateTime(\"min\"),\r\n        date: GetCurrentDateTime(\"date\"),\r\n        name: null,\r\n        menuItem: [],\r\n        total: 0,\r\n      },\r\n    };\r\n    this.removeElement = this.removeElement.bind(this);\r\n    this.NavButtonClick = this.NavButtonClick.bind(this);\r\n  }\r\n\r\n  //***              Fetch restaurant and menu data               ***/\r\n  callAPI() {\r\n    fetch(\"http://localhost:9000/restaurant\")\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState({ apiResponse: res }));\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.callAPI();\r\n  }\r\n\r\n  dateCallback = (childData) => {\r\n    this.setState({\r\n      order: {\r\n        time: this.state.order[\"time\"],\r\n        date: childData,\r\n        name: this.state.order[\"name\"],\r\n        menuItem: [...this.state.order[\"menuItem\"]],\r\n        total: this.state.order[\"total\"],\r\n      },\r\n    });\r\n  };\r\n\r\n  timeCallback = (childData) => {\r\n    this.setState({\r\n      order: {\r\n        time: childData,\r\n        date: this.state.order[\"date\"],\r\n        name: this.state.order[\"name\"],\r\n        menuItem: [...this.state.order[\"menuItem\"]],\r\n        total: this.state.order[\"total\"],\r\n      },\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"http://localhost:9000/post/orderhistory\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ order: this.state.order }),\r\n    });\r\n  };\r\n\r\n  restaurantCallback = (childData) => {\r\n    this.setState({\r\n      order: {\r\n        time: this.state.order[\"time\"],\r\n        date: this.state.order[\"date\"],\r\n        name: childData,\r\n        menuItem: [...this.state.order[\"menuItem\"]],\r\n        total: this.state.order[\"total\"],\r\n      },\r\n    });\r\n  };\r\n\r\n  menuCallback = (childData) => {\r\n    this.setState({\r\n      order: {\r\n        time: this.state.order[\"time\"],\r\n        date: this.state.order[\"date\"],\r\n        name: this.state.order[\"name\"],\r\n        menuItem: [...childData[0]],\r\n        total: [childData[1]],\r\n      },\r\n    });\r\n  };\r\n\r\n  removeElement(array, elem) {\r\n    var index = array.indexOf(elem);\r\n    if (index > -1) {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  //***                  Navigation button function               ***/\r\n\r\n  NavButtonClick(e) {\r\n    switch (e.target.id) {\r\n      case \"nextButton\":\r\n        if (this.state.viewId == 2 && this.state.order[\"name\"] == null) {\r\n          alert(\"Please select a restaurant!\");\r\n        } else {\r\n          this.setState({\r\n            viewId: this.state.viewId + 1,\r\n          });\r\n        }\r\n        break;\r\n      case \"backButton\":\r\n        this.setState({\r\n          viewId: this.state.viewId - 1,\r\n        });\r\n        break;\r\n      case \"checkoutButton\":\r\n        if (this.state.order[\"menuItem\"].length == 0) {\r\n          alert(\"The cart is empty!\");\r\n        } else {\r\n          this.setState({\r\n            viewId: this.state.viewId + 1,\r\n          });\r\n        }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"App\">\r\n\r\n        {/***                 Views are displayed here               ***/  } \r\n          <div className=\"View-Window\">\r\n            {this.state.viewId === 1 ? (\r\n              <DateTimeView\r\n                dateCallback={this.dateCallback}\r\n                minDate={GetCurrentDateTime(\"date\")}\r\n                date={this.state.order[\"date\"]}\r\n                timeCallback={this.timeCallback}\r\n                time={this.state.order[\"time\"]}\r\n              />\r\n            ) : null}\r\n\r\n            {this.state.viewId === 2 ? (\r\n              <RestaurantView\r\n                restCallback={this.restaurantCallback}\r\n                date={this.state.order[\"date\"]}\r\n                time={this.state.order[\"time\"]}\r\n                restArr={this.state.apiResponse}\r\n              />\r\n            ) : null}\r\n\r\n            {this.state.viewId === 3 ? (\r\n              <MenuItemView\r\n                menuCallback={this.menuCallback}\r\n                totalCallback={this.totalCallback}\r\n                restArr={this.state.apiResponse}\r\n                name={this.state.order[\"name\"]}\r\n                date={this.state.order[\"date\"]}\r\n                time={this.state.order[\"time\"]}\r\n                menuItem={this.state.order[\"menuItem\"]}\r\n                total={this.state.order[\"total\"]}\r\n              />\r\n            ) : null}\r\n\r\n            {this.state.viewId === 4 ? (\r\n              <CheckoutView\r\n                order={this.state.order}\r\n                time={ConvertTo12HourFormat(this.state.order[\"time\"])}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          {/***                  Navigation buttons               ***/}\r\n          <div className=\"Navigation-Bar\">\r\n            {this.state.viewId >= 2 && this.state.viewId != 4 ? (\r\n              <button\r\n                className=\"Nav-Button\"\r\n                id=\"backButton\"\r\n                onClick={this.NavButtonClick}\r\n              >\r\n                Back\r\n              </button>\r\n            ) : null}\r\n            {this.state.viewId < 3 ? (\r\n              <button\r\n                className=\"Nav-Button\"\r\n                id=\"nextButton\"\r\n                onClick={this.NavButtonClick}\r\n              >\r\n                Next\r\n              </button>\r\n            ) : null}\r\n            {this.state.viewId == 3 ? (\r\n              <button\r\n                className=\"Nav-Button\"\r\n                id=\"checkoutButton\"\r\n                onClick={this.NavButtonClick}\r\n              >\r\n                Checkout\r\n              </button>\r\n            ) : null}\r\n            {this.state.viewId == 4 ? (\r\n              <div>\r\n                <button\r\n                  className=\"Nav-Button\"\r\n                  id=\"confirmButton\"\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Confirm\r\n                </button>\r\n                <button\r\n                  className=\"cancelCheckoutBtn\"\r\n                  id=\"backButton\"\r\n                  onClick={this.NavButtonClick}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        {/***                  Cart is shown here               ***/}\r\n        {this.state.viewId == 4 ? null : (\r\n          <div className=\"Order-Detail\">\r\n            <h3>Order Detail</h3>\r\n            <div>\r\n              <h4>Time: {ConvertTo12HourFormat(this.state.order[\"time\"])}</h4>\r\n              <h4>Date: {this.state.order[\"date\"]}</h4>\r\n              <h4>Restaurant: {this.state.order[\"name\"]}</h4>\r\n            </div>\r\n            <div>\r\n              {this.state.order[\"menuItem\"].map((item) => (\r\n                <li>{item}</li>\r\n              ))}\r\n            </div>\r\n            <p>Total: MYR {this.state.order[\"total\"]}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ConvertTo12HourFormat(timeData) {\r\n  var timeArr = timeData.split(\":\");\r\n  if (timeArr[0] >= 12) {\r\n    return (\r\n      (timeArr[0] == 12 ? timeArr[0] : timeArr[0] - 12) +\r\n      \":\" +\r\n      timeArr[1] +\r\n      \"pm\"\r\n    );\r\n  } else {\r\n    return (\r\n      (timeArr[0] === \"00\" ? 12 : parseInt(timeArr[0])) +\r\n      \":\" +\r\n      timeArr[1] +\r\n      \"am\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction GetCurrentDateTime(i) {\r\n  const NOW = new Date();\r\n  const CURRENT_DATE =\r\n    NOW.getFullYear() +\r\n    \"-\" +\r\n    (NOW.getMonth() + 1).toString().padStart(2, \"0\") +\r\n    \"-\" +\r\n    NOW.getDate().toString().padStart(2, \"0\");\r\n\r\n  const CURRENT_HOUR = NOW.getHours().toString().padStart(2, \"0\");\r\n  const CURRENT_MIN = NOW.getMinutes().toString().padStart(2, \"0\");\r\n\r\n  switch (i) {\r\n    case \"hour\":\r\n      return CURRENT_HOUR;\r\n    case \"min\":\r\n      return CURRENT_MIN;\r\n    case \"date\":\r\n      return CURRENT_DATE;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass OrderHistory extends Component{\r\nconstructor(props){\r\n  super(props)\r\nthis.state={\r\n  apiResponse: []\r\n}\r\n\r\n  this.callAPI = this.callAPI.bind(this)\r\n}\r\ncomponentDidMount(){\r\n  console.log(\"Order History page mounted\")\r\n  this.callAPI()\r\n}\r\n\r\ncallAPI(){\r\n  fetch(\"http://localhost:9000/get/orderhistory\")\r\n  .then(res => res.json())\r\n  .then(res => this.setState({ apiResponse: res }));\r\n  console.log(\"apiResponse: \" + JSON.stringify(this.state.apiResponse))     \r\n}\r\n\r\n  render(){\r\n  return(\r\n    <div className=\"OrderHistory\">\r\n    <h1>Order History</h1>\r\n    <div className=\"orderHistoryDiv\">\r\n      \r\n      {this.state.apiResponse.map(i =>(\r\n        <table className=\"orderHistoryTable\">\r\n        <tr>\r\n          <td className=\"orderHistoryTableTop\">Time</td><td>{i.time}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"orderHistoryTableTop\">Date</td><td>{i.date}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"orderHistoryTableTop\"> Restaurant</td><td>{i.name}</td>\r\n        </tr>\r\n        <th>Order item</th><th></th>\r\n          {i.menuItem.map(item => (\r\n            <tr>{item}</tr>\r\n          ))}\r\n        <tr>\r\n          <td className=\"orderHistoryTableTotal\">Total</td>\r\n          <td className=\"orderHistoryTableTotal\">MYR {i.total}</td>\r\n        </tr>\r\n        </table>\r\n      ))\r\n  }\r\n  </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n}\r\n\r\n\r\nexport default OrderHistory;\r\n","/** Name: App.js\n *  Purpose: For routing the home and order history pages\n *  \n*/\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport OrderHistory from \"./OrderHistory\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderList: [],\n    };\n  }\n\n  orderCallback = (data) => {\n    this.setState({\n      orderList: [...this.state.orderList, data],\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <table className=\"header-table\">\n          <tr>\n            {/*** Links to different pages ***/}\n            <td>\n              <a href=\"http://localhost:3000/home\">Home</a>\n            </td>\n            <td>\n              <a href=\"http://localhost:3000/orderhistory\">Order History</a>\n            </td>\n          </tr>\n        </table>\n        <div className=\"Header\">\n          <h1>Movel AI Assignment</h1>\n        </div>\n        <BrowserRouter>\n          <div>\n            <Switch>\n              <Route exact path=\"/\">\n                <Redirect to=\"/home\" />\n              </Route>\n              <Route path=\"/home\" component={Home} />\n              <Route path=\"/orderhistory\" component={OrderHistory} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport OrderHistory from './OrderHistory'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}